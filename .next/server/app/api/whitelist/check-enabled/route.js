"use strict";(()=>{var e={};e.id=5643,e.ids=[5643],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},25086:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>g,patchFetch:()=>w,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>m,staticGenerationAsyncStorage:()=>h});var s={};r.r(s),r.d(s,{GET:()=>l,dynamic:()=>u});var i=r(49303),n=r(88716),a=r(60670),o=r(87070),c=r(83493);async function l(){try{let e=await c._.systemSettings.findFirst({where:{key:"whitelistEnabled"},select:{value:!0}});return o.NextResponse.json({success:!0,enabled:e?.value==="true"})}catch(e){return console.error("Error checking whitelist setting:",e),o.NextResponse.json({success:!1,message:"Error checking whitelist setting",error:e instanceof Error?e.message:"Unknown error"},{status:500})}}let u="force-dynamic",p=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/whitelist/check-enabled/route",pathname:"/api/whitelist/check-enabled",filename:"route",bundlePath:"app/api/whitelist/check-enabled/route"},resolvedPagePath:"/Users/kyleaditya/Documents/IDF coupon fulldetails/app/api/whitelist/check-enabled/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:h,serverHooks:m}=p,g="/api/whitelist/check-enabled/route";function w(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:h})}},83493:(e,t,r)=>{r.d(t,{_:()=>i});let s=require("@prisma/client"),i=globalThis.prisma??new s.PrismaClient}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[9276,5972],()=>r(25086));module.exports=s})();